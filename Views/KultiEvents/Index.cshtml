@using Mvc4_Kulti
@model IEnumerable<Mvc4_Kulti.Events>

<link href="../../Images/TableSort/style.css" rel="stylesheet" type="text/css" />
<script src="../../Content/themes/jquery.tablesorter.min.js" type="text/javascript"> </script>

<style>
  #sidebar {
    display: none;
    visibility: hidden;
  }
  #content {
    width: 90%;
  }
</style>

<script type="text/javascript">  

  function printPage() {
    var divToPrint = document.getElementById('SortTable');
    newWin = window.open("");
    newWin.document.write(divToPrint.outerHTML);
    //newWin.print();
    //newWin.close();
  }

  $(document).ready(function () {
    $("#SortTable").tablesorter(
      {
        dateFormat: "ddmmyyyy",
        widgets: ['zebra'],
        cssAsc: "headerSortUp",
        cssDesc: "headerSortDown",
        cssHeader: "header"
      }
    );

    $("#filterRow").change(function () {
      var sFilter = $('#filterRow').find(":selected").text();
      //clear previous filter
      var r = $('#SortTable tbody tr').filter(function () {
        return $.trim($(this).find('td'));
      }).show();
      $('#filterRow2').val("Select");
      //add new filter
      if (sFilter != "Select") {
        var $rowsNo = $('#SortTable tbody tr').filter(function () {
          return $.trim($(this).find('td').eq(5).text()) != sFilter
        }).hide();
      }
    });

    $("#filterRow2").change(function () {
      var sFilter = $('#filterRow2').find(":selected").text();
      //clear previous filter
      var r = $('#SortTable tbody tr').filter(function () {
        return $.trim($(this).find('td'));
      }).show();
      $('#filterRow').val("Select");
      //add new filter
      if (sFilter != "Select") {
        var $rowsNo = $('#SortTable tbody tr').filter(function () {
          return $.trim($(this).find('td').eq(6).text()) != sFilter;
        }).hide();
      }
    });

    //make alignment-right possible
    var ek = $("#mainTbl tr:eq(2)").find("td:first");
    ek.removeAttr();
    ek.css("width", "90%");

  });
</script>

<hgroup class="title">
  <div class="error">@ViewBag.NotAllowed</div>
</hgroup>

<p>
  @Html.ActionLink("Erstellen", "Create") | @Html.ActionLink("PrintView", "EventsPrint") | <span style="cursor: pointer" onclick="printPage();">Seite drucken</span> |
  @Html.ActionLink("Alte anzeigen", "Index", new { oldView = true }) | 
  @Html.ActionLink("Aktuelle anzeigen", "Index", new { oldView = false }) | 
  <span>Filter Typ</span>
  <span>
    <select id="filterRow">
      <option>Select</option>
      <option>Veranstaltung</option>
      <option>Sitzung Beiz</option>
      <option>Sitzung Halle</option>
      <option>Sitzung KoKo</option>
      <option>Sitzung Verwaltung</option>
      <option>Sitzung VV</option>
      <option>Sitzung ÖT</option>
    </select>
  </span>
   | 
  <span>Filter Gruppe</span>
  <span>
    <select id="filterRow2">
      <option>Select</option>
      <option>Halle</option>
      <option>KoKo</option>
      <option>Beiz</option>
      <option>Mieter</option>
      <option>Träve</option>
      <option>Verwaltung</option>
      <option>Stiftung</option>
    </select>
  </span>
</p>

<fieldset>
  <legend>@EvTimeFrame() Events</legend>
  @if (@TempData["Success"] != null)
  { <div class="message-success">@TempData["Success"].ToString()</div> }

  <table id="SortTable" class="tablesorter" style="width: 100%">
    <thead>
      <tr>
        <td><strong>Titel</strong></td>
        <td><strong>Start</strong></td>
        <td><strong>Ende</strong></td>
        <td><strong>Bild</strong></td>
        <td><strong>Status</strong></td>
        <td><strong>Typ</strong></td>
        <td>Gruppe</td>
      </tr>
    </thead>
  
    <tbody>
      @foreach (Events item in Model)
      {
        <tr>
          <td>
            @Html.DisplayFor(modelItem => item.EvTitle)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.EvStartDate)
          </td>
          <td>
            @Html.DisplayFor(modelItem => item.EvEndDate)
          </td>
          <td>
            <img src="@ImgFile(item.EvImgPath1)" width="30" />
          </td>
          <td>
            @if (item.EvStatus != null)
            {
              @EventStatus(item.EvStatus.Value.ToString())
            }
          </td>
          <td>
            @if (item.EvType != null)
            {
              @EventType(item.EvType.Value)
            }
          </td>
          <td>@EventGroup(item.EvGroupId ?? 0) </td>
          <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.EventId }) |
            @Html.ActionLink("Details", "Details", new { id = item.EventId }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.EventId })
          </td>
        </tr>
      }
    </tbody>
  </table>

</fieldset>

@functions{

  public string ImgFile(string path)
  {
    try
    {
      string filename = path.Split('\\').Last();
      return "/Images/Events/" + filename;
    }
    catch
    {
      return "";
    }
  }

  public string EventType(int id)
  {
    string evType = string.Empty;
    switch (id)
    {
      case 20:
        evType = "Veranstaltung";
        break;
      case 21:
        evType = "Sitzung Halle";
        break;
      case 22:
        evType = "Sitzung VV";
        break;
      case 23:
        evType = "Sitzung Koko";
        break;
      case 34:
        evType = "Sitzung Verwaltung";
        break;
      case 35:
        evType = "Sitzung ÖT";
        break;
      case 36:
        evType = "Sitzung Beiz";
        break;
      default:
        evType = "??";
        break;
    }
    return evType;
  }

  public string EventGroup(int id)
  {
    string evGroup = string.Empty;
    switch (id)
    {
      case 8:
        evGroup = "Halle";
        break;
      case 9:
        evGroup = "Beiz";
        break;
      case 11:
        evGroup = "KoKo";
        break;
      case 12:
        evGroup = "Träve";
        break;
      case 10:
        evGroup = "Mieter";
        break;
      case 32:
        evGroup = "Stiftung";
        break;        
      case 33:
        evGroup = "Verwaltung";
        break;
      default:
        evGroup = "??";
        break;
    }
    return evGroup;
  }

  public string EventStatus(string id)
  {
    string evStatus = string.Empty;
    switch (id)
    {
      case "1":
        evStatus = "Draft";
        break;
      case "2":
        evStatus = "Release";
        break;
      case "3":
        evStatus = "Privat";
        break;
      default:
        evStatus = "??";
        break;
    }
    return evStatus;
  }

  public string EvTimeFrame()
  {
    if (@Request.QueryString.ToString().Contains("True"))
    { return "Vergangene"; }
    return "Geplante";
  }

}