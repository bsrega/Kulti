<style>
   #sidebar { display: none; }
   #content { width: 90%; }
 </style>

@model Mvc4_Kulti.Events

@{
  ViewBag.Title = "Details";
}

<fieldset>
  <legend>Event-Detail</legend>
  
  <table style="width: 100%;">
    <tr>
      <td>Titel</td>
      <td>@Html.DisplayFor(model => model.EvTitle)</td>
    </tr>
    <tr>
      <td>Start-Datum</td>
      <td>@Html.DisplayFor(model => model.EvStartDate)</td>
    </tr>
    <tr>
      <td>End-Datum</td>
      <td>@Html.DisplayFor(model => model.EvEndDate)</td>
    </tr>
    <tr>
      <td>Text</td>
      <td>
        <div style="overflow: auto; height: 150px;">
          @Html.Raw(Model.EvText)
        </div>
      </td>
    </tr>
    <tr>
      <td>Ersteller</td>
      <td>@ViewBag.UserName</td>
    </tr>
    <tr>
      <td>Verantwortlicher</td>
      <td>@Model.EvResponsible</td>
    </tr>
    <tr>
      <td>Gruppe</td>
      <td>@EventGroup(Model.EvGroupId ?? 0)</td>
    </tr>
    <tr>
      <td>Parkplatzbedarf</td>
      <td>@EventSize(Model.EvSize ?? 0)</td>
    </tr>
    <tr>
      <td>Status</td>
      <td>@EventStatus(Model.EvStatus ?? 0)</td>
    </tr>
    <tr>
      <td>Bild</td>
      <td>
        <img src="@ImgFile(Model.EvImgPath1)" width="100" />
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">Lokalitäten</td>
      <td>
        <ul>
          @foreach (dynamic item in ViewBag.Locations)
          {
            <li>@item</li>
          }
        </ul>
      </td>       
    </tr> 
    <tr>
      <td style="vertical-align: top;">Veranstalter / Agentur</td>
      <td>
        @if (ViewBag.AgencyDetail != null)
        {
          <table style="width: 50%">
            @foreach (var r in ViewBag.AgencyDetail as Dictionary<string, string>)
            {
              <tr>
                <td>@r.Key</td>
                <td>@r.Value</td>
              </tr>
            }
          </table>
        }
        else
        {
          <p>keine Agentur / Veranstalter</p>
        }
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">Götti/interne Infos</td>
      <td>
        @Html.Raw(Model.EvInterInfo)
      </td>
    </tr>

  </table>

</fieldset>
<p>
  @Html.ActionLink("Edit", "Edit", new {id = Model.EventId}) |
  @Html.ActionLink("Back to List", "Index")
</p>


@functions{

  public string ImgFile(string path)
  {
    try
    {
      string filename = path.Split('\\').Last();
      return "/Images/Events/" + filename;
    }
    catch
    {
      return "";
    }
  }

  public string EventType(int id)
  {
    string evType = string.Empty;
    switch (id)
    {
      case 20:
        evType = "Veranstaltung";
        break;
      case 21:
        evType = "Sitzung Halle";
        break;
      case 22:
        evType = "Sitzung VV";
        break;
      case 23:
        evType = "Sitzung Koko";
        break;
      default:
        evType = "??";
        break;
    }
    return evType;
  }

  public string EventStatus(int id)
  {
    string evStatus = string.Empty;
    switch (id)
    {
      case 1:
        evStatus = "Draft";
        break;
      case 2:
        evStatus = "Release";
        break;
      case 3:
        evStatus = "Rejected";
        break;
      default:
        evStatus = "??";
        break;
    }
    return evStatus;
  }

  public string EventGroup(int id)
  {
    string evGroup = string.Empty;
    switch (id)
    {
      case 8:
        evGroup = "Halle";
        break;
      case 9:
        evGroup = "Beiz";
        break;
      case 10:
        evGroup = "Mieter";
        break;
      case 11:
        evGroup = "Koko";
        break;
      case 12:
        evGroup = "Träve";
        break;
      case 32:
        evGroup = "Stiftung";
        break;
      case 33:
        evGroup = "Verwaltung";
        break;
      default:
        evGroup = "??";
        break;
    }
    return evGroup;
  }


  public string EventSize(int id)
  {
    string evSize = string.Empty;
    switch (id)
    {
      case 38:
        evSize = "Parkplätze: 10-20 PW";
        break;
      case 39:
        evSize = "Parkplätze: 20-40 PW";
        break;
      case 40:
        evSize = "Parkplätze: Ab 40 PW";
        break;
      default:
        evSize = "??";
        break;
    }
    return evSize;
  }


}